from datetime import datetime

file_list = [
    '/Users/florencea/GitHub/my-macos-build/configs/element-custom-rules-desktop.txt',
    '/Users/florencea/GitHub/my-macos-build/configs/element-custom-rules-mobile.txt'
]


def not_emply_line(line_list):
    return line_list[0] != ''


def not_comment_line(line_str):
    return line_str[0] != '!'


def not_style_line(line_str):
    return ':style(' not in line_str


def is_style_line(line_str):
    return ':style(' in line_str


def is_remove_function_line(line_str):
    return ':remove()' in line_str


def read_input_rule(file_name):
    with open(file_name, 'r') as rule_file:
        input_list = []
        for line in rule_file:
            line_list = line.split('\n')
            if not_emply_line(line_list):
                input_list.append(line_list[0])
        return input_list


def get_meta(input_list):
    meta_list = []
    for line in input_list:
        if 'Description:' in line:
            meta_list.append(line)
        elif 'Last updated:' in line:
            meta_list.append(line)
        elif 'Title:' in line:
            meta_list.append(line + ' minified')
    meta_list.append('! generated by rule-combiner ' + datetime.now().isoformat())
    return meta_list


def get_remove_rules(input_list):
    remove_rule_list = []
    for line in input_list:
        if not_comment_line(line) and not_style_line(line):
            if is_remove_function_line(line):
                remove_rule_list.append(line.replace(':remove()', ''))
                remove_rule_list.append(line)
            else:
                remove_rule_list.append(line)
    return remove_rule_list


def get_style_rules(input_list):
    style_rule_list = []
    for line in input_list:
        if is_style_line(line):
            style_rule_list.append(line + '|')
    return style_rule_list


def get_style_dict(style_rule_list):
    style_dict = {}
    for rule in style_rule_list:
        rule_list = rule.split(':style(')
        style_key = rule_list[0]
        style_value = rule_list[1].replace(')|', '')
        if style_key in style_dict:
            style_dict[style_key].append(style_value)
        else:
            style_dict[style_key] = []
            style_dict[style_key].append(style_value)
    return style_dict


def get_combined_style_rules(style_rule_list):
    combined_style_rule_list = []
    style_dict = get_style_dict(style_rule_list)
    for style_key in style_dict:
        style_str = style_key + ':style(' + '; '.join(style_dict[style_key]) + ')'
        combined_style_rule_list.append(style_str)
    return combined_style_rule_list


for file_name in file_list:
    input_list = read_input_rule(file_name)
    with open(file_name.split('.')[0] + '.combined.txt', 'w') as output_file:
        for line in get_meta(input_list):
            print(line, file=output_file)
        if 'mobile' in file_name:
            print('!#if env_mobile', file=output_file)
        for line in get_remove_rules(input_list):
            print(line, file=output_file)
        for line in get_combined_style_rules(get_style_rules(input_list)):
            print(line, file=output_file)
        if 'mobile' in file_name:
            print('!#endif', file=output_file)
