#! /usr/bin/env bash
set -o errexit
set -o pipefail

### Check cmd exist
chkcmd "brew"
chkcmd "curl"
chkcmd "fnm"
chkcmd "git"
chkcmd "jq"
chkcmd "node"
chkcmd "npm"

### Upgrade homebrew apps/clis
cd "$HOME"
brew upgrade

## Update Node.js to latest target version
TARGET_NODE_VERSION="v18"
LATEST_TARGET_NODE_VERSION="$(curl -fsSL https://nodejs.org/download/release/index.json | jq -cr 'last( sort_by( .date | split("-") | map(tonumber) ) | .[] | select(.version | startswith("v18"))) | .version')"
CURRENT_LOCAL_VERSION="$(node -v)"
if ! [ "$LATEST_TARGET_NODE_VERSION" = "$CURRENT_LOCAL_VERSION" ]; then
  printf "Target Node.js LTS version: \033[1;36m$TARGET_NODE_VERSION\033[0m\n"
  printf "Latest taraget Node.js LTS version: \033[1;36m$LATEST_TARGET_NODE_VERSION\033[0m, local: \033[1;31m$CURRENT_LOCAL_VERSION\033[0m\n"
  fnm install "$LATEST_TARGET_NODE_VERSION"
  fnm default "$LATEST_TARGET_NODE_VERSION"
  fnm uninstall "$CURRENT_LOCAL_VERSION"
fi

### Sync git projects
cd "$(dirname $0)"
cd "../../"
for PROJECT in $(ls .); do
  cd "$PROJECT"
  if [ -d .git ]; then
    git pull --all --quiet && printf "Sync \033[1m%s\033[0m ok\n" "$PROJECT" &
  fi
  cd "../"
done

wait
