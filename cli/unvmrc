#! /usr/bin/env bash
set -o errexit
set -o pipefail

### Check cmd exist
chkcmd "git"
chkcmd "node"

### Print current node/npm version
CURRENT_LOCAL_VERSION="$(node -v)"
CURRENT_NPM_VERSION="$(npm -v)"
printf "\nnode: \033[1;32m$CURRENT_LOCAL_VERSION\033[0m, npm: \033[1;32m$CURRENT_NPM_VERSION\033[0m\n\n"

### Sync git projects
cd "$(dirname $0)"
cd "../../"
for PROJECT in $(ls .); do
  cd "$PROJECT"
  if [ -d .git ]; then
    if [ -f .nvmrc ]; then
      OLD_NODE_VERSION="$(cat .nvmrc)"
      NODE_VERSION="$(node -v)"
      echo "$NODE_VERSION" >.nvmrc
      ### If node version change, add to git
      if [ "$(git status --short)" != "" ]; then
        git add .nvmrc && git commit -q -m "chore(node): Update node version $OLD_NODE_VERSION -> $NODE_VERSION" && git push -q &>/dev/null && printf ".nvmrc \033[1;31m%s\033[0m -> \033[1;36m%s\033[0m \033[1m%s\033[0m\n" "$OLD_NODE_VERSION" "$NODE_VERSION" "$PROJECT" &
      else
        printf ".nvmrc \033[1;32m%s\033[0m \033[1m%s\033[0m\n" "$OLD_NODE_VERSION" "$PROJECT"
      fi
    fi
  fi
  cd "../"
done

wait
